{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Constants from \"expo-constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar baseUrl = \"https://owner-api.teslamotors.com\";\nexport default function App() {\n  var _useState = useState(\"tesla.com\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"tesla.com\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"c7257eb71a564034f9419ee651c7d0e5f7aa6bfbd18bafb5c5c033b093bb2fa3\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      clientSecret = _useState6[0],\n      setClientSecret = _useState6[1];\n\n  var _useState7 = useState(\"81527cff06843c8634fdc09e8ac0abefb46ac849f38fe1e431c2ef2106796384\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      clientId = _useState8[0],\n      setClientId = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setIsLoading = _useState10[1];\n\n  var onChangeNameHandler = function onChangeNameHandler(password) {\n    setPassword(password);\n  };\n\n  var onChangeEmailHandler = function onChangeEmailHandler(email) {\n    setEmail(email);\n  };\n\n  var onChangeClientSecretHandler = function onChangeClientSecretHandler(clientSecret) {\n    setClientSecret(clientSecret);\n  };\n\n  var onChangeClientIdHandler = function onChangeClientIdHandler(clientId) {\n    setClientId(clientId);\n  };\n\n  var onSubmitFormHandler = function onSubmitFormHandler(event) {\n    var headers, response;\n    return _regeneratorRuntime.async(function onSubmitFormHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!password.trim() || !email.trim() || !clientSecret.trim() || !clientId.trim())) {\n              _context.next = 3;\n              break;\n            }\n\n            alert(\"Password or Email or client info is invalid\");\n            return _context.abrupt(\"return\");\n\n          case 3:\n            setIsLoading(true);\n            _context.prev = 4;\n            headers = {\n              \"Content-Type\": \"application/json\",\n              'Accept': 'application/json',\n              \"Access-Control-Origin\": \"*\"\n            };\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:4000/power\", {\n              mode: 'no-cors',\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify({\n                isPower: true\n              })\n            }));\n\n          case 8:\n            response = _context.sent;\n            console.log('response', response);\n\n            if (!(response.status === 200)) {\n              _context.next = 19;\n              break;\n            }\n\n            alert(\"Authorize: \" + JSON.stringify(response.data));\n            setIsLoading(false);\n            setPassword('');\n            setEmail('');\n            setClientSecret('');\n            setClientId('');\n            _context.next = 20;\n            break;\n\n          case 19:\n            throw new Error(\"An error has occurred\");\n\n          case 20:\n            _context.next = 27;\n            break;\n\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](4);\n            console.log('error', _context.t0);\n            alert(\"An error has occurred\");\n            setIsLoading(false);\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 22]], Promise);\n  };\n\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: _jsxs(View, {\n      children: [_jsx(View, {\n        style: styles.wrapper,\n        children: isLoading ? _jsx(Text, {\n          style: styles.formHeading,\n          children: \" Loading \"\n        }) : _jsx(Text, {\n          style: styles.formHeading,\n          children: \"Authorize\"\n        })\n      }), _jsx(View, {\n        style: styles.wrapper,\n        children: _jsx(TextInput, {\n          placeholder: \"Password\",\n          place: true,\n          placeholderTextColor: \"#ffffff\",\n          style: styles.input,\n          value: password,\n          editable: !isLoading,\n          onChangeText: onChangeNameHandler\n        })\n      }), _jsx(View, {\n        style: styles.wrapper,\n        children: _jsx(TextInput, {\n          placeholder: \"Email\",\n          placeholderTextColor: \"#ffffff\",\n          style: styles.input,\n          value: email,\n          editable: !isLoading,\n          onChangeText: onChangeEmailHandler\n        })\n      }), _jsx(View, {\n        style: styles.wrapper,\n        children: _jsx(TextInput, {\n          placeholder: \"Client Secret\",\n          placeholderTextColor: \"#ffffff\",\n          style: styles.input,\n          value: clientSecret,\n          editable: !isLoading,\n          onChangeText: onChangeClientSecretHandler\n        })\n      }), _jsx(View, {\n        style: styles.wrapper,\n        children: _jsx(TextInput, {\n          placeholder: \"Client Id\",\n          placeholderTextColor: \"#ffffff\",\n          style: styles.input,\n          value: clientId,\n          editable: !isLoading,\n          onChangeText: onChangeClientIdHandler\n        })\n      }), _jsx(View, {\n        children: _jsx(Button, {\n          title: \"Submit\",\n          onPress: onSubmitFormHandler,\n          style: styles.submitButton,\n          disabled: isLoading\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#252526\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: Platform.OS === \"ios\" ? 0 : Constants.statusBarHeight\n  },\n  formHeading: {\n    color: \"#ffffff\"\n  },\n  wrapper: {\n    marginBottom: 10\n  },\n  input: {\n    borderWidth: 2,\n    borderColor: \"grey\",\n    minWidth: 200,\n    textAlignVertical: \"center\",\n    paddingLeft: 10,\n    borderRadius: 20,\n    color: \"#ffffff\"\n  },\n  submitButton: {\n    backgroundColor: \"gray\",\n    padding: 100\n  }\n});","map":{"version":3,"sources":["/Users/rs282j/Documents/Dev/charge-point/tesla-app/App.js"],"names":["axios","React","useState","Constants","baseUrl","App","password","setPassword","email","setEmail","clientSecret","setClientSecret","clientId","setClientId","isLoading","setIsLoading","onChangeNameHandler","onChangeEmailHandler","onChangeClientSecretHandler","onChangeClientIdHandler","onSubmitFormHandler","event","trim","alert","headers","fetch","mode","method","body","JSON","stringify","isPower","response","console","log","status","data","Error","styles","container","wrapper","formHeading","input","submitButton","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","marginTop","Platform","OS","statusBarHeight","color","marginBottom","borderWidth","borderColor","minWidth","textAlignVertical","paddingLeft","borderRadius","padding"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  ScrollView,\n  View,\n  Button,\n  Platform,\n  TextInput,\n} from \"react-native\";\nimport Constants from \"expo-constants\";\n\nconst baseUrl = \"https://owner-api.teslamotors.com\";\n\nexport default function App() {\n  const [password, setPassword] = useState(\"tesla.com\");\n  const [email, setEmail] = useState(\"tesla.com\");\n  const [clientSecret, setClientSecret] = useState(\"c7257eb71a564034f9419ee651c7d0e5f7aa6bfbd18bafb5c5c033b093bb2fa3\");\n  const [clientId, setClientId] = useState(\"81527cff06843c8634fdc09e8ac0abefb46ac849f38fe1e431c2ef2106796384\");\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onChangeNameHandler = (password) => {\n    setPassword(password);\n  };\n\n  const onChangeEmailHandler = (email) => {\n    setEmail(email);\n  };\n\n  const onChangeClientSecretHandler = (clientSecret) => {\n    setClientSecret(clientSecret);\n  };\n\n  const onChangeClientIdHandler = (clientId) => {\n    setClientId(clientId);\n  };\n\n  const onSubmitFormHandler = async (event) => {\n    if (!password.trim() || !email.trim() || !clientSecret.trim() || !clientId.trim()) {\n      alert(\"Password or Email or client info is invalid\");\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        'Accept': 'application/json',\n        \"Access-Control-Origin\": \"*\"\n      }\n      const response = await fetch(`http://localhost:4000/power`, {\n        mode: 'no-cors',\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify({\n          isPower: true\n        })\n      })\n\n      // const response = await fetch(`${baseUrl}/oauth/token`, {\n      //   mode: 'no-cors',\n      //   method: 'POST',\n      //   headers: headers,\n      //   body: JSON.stringify({\n      //     password: password,\n      //     email: email,\n      //     client_secret: clientSecret,\n      //     client_id : clientId,\n      //     grant_type: 'password'\n      //   })\n      // })\n\n      // const response = await axios.post(`${baseUrl}/oauth/token`, {\n      //   password: password,\n      //   email: email,\n      //   client_secret: clientSecret,\n      //   client_id : clientId,\n      //   grant_type: 'password'\n      // }, {\n      //   headers: {\n      //     //\"Access-Control-Allow-Origin\": \"*\",\n      //     \"Content-Type\": \"application/json\"},\n      //     withCredentials: false\n      // });\n      console.log('response', response)\n      if (response.status === 200) {\n        alert(`Authorize: ${JSON.stringify(response.data)}`);\n        setIsLoading(false);\n        setPassword('');\n        setEmail('');\n        setClientSecret('');\n        setClientId('');\n      } else {\n\n        throw new Error(\"An error has occurred\");\n      }\n    } catch (error) {\n      console.log('error', error)\n      alert(\"An error has occurred\");\n      setIsLoading(false);\n    }\n  };\n\n  return (\n      <ScrollView contentContainerStyle={styles.container}>\n        <View>\n          <View style={styles.wrapper}>\n            {isLoading ? (\n                <Text style={styles.formHeading}> Loading </Text>\n            ) : (\n                <Text style={styles.formHeading}>Authorize</Text>\n            )}\n          </View>\n          <View style={styles.wrapper}>\n            <TextInput\n                placeholder=\"Password\"\n                place\n                placeholderTextColor=\"#ffffff\"\n                style={styles.input}\n                value={password}\n                editable={!isLoading}\n                onChangeText={onChangeNameHandler}\n            />\n          </View>\n          <View style={styles.wrapper}>\n            <TextInput\n                placeholder=\"Email\"\n                placeholderTextColor=\"#ffffff\"\n                style={styles.input}\n                value={email}\n                editable={!isLoading}\n                onChangeText={onChangeEmailHandler}\n            />\n          </View>\n          <View style={styles.wrapper}>\n            <TextInput\n                placeholder=\"Client Secret\"\n                placeholderTextColor=\"#ffffff\"\n                style={styles.input}\n                value={clientSecret}\n                editable={!isLoading}\n                onChangeText={onChangeClientSecretHandler}\n            />\n          </View>\n          <View style={styles.wrapper}>\n            <TextInput\n                placeholder=\"Client Id\"\n                placeholderTextColor=\"#ffffff\"\n                style={styles.input}\n                value={clientId}\n                editable={!isLoading}\n                onChangeText={onChangeClientIdHandler}\n            />\n          </View>\n          <View>\n            <Button\n                title=\"Submit\"\n                onPress={onSubmitFormHandler}\n                style={styles.submitButton}\n                disabled={isLoading}\n            />\n          </View>\n        </View>\n      </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#252526\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: Platform.OS === \"ios\" ? 0 : Constants.statusBarHeight,\n  },\n  formHeading: {\n    color: \"#ffffff\",\n  },\n  wrapper: {\n    marginBottom: 10,\n  },\n  input: {\n    borderWidth: 2,\n    borderColor: \"grey\",\n    minWidth: 200,\n    textAlignVertical: \"center\",\n    paddingLeft: 10,\n    borderRadius: 20,\n    color: \"#ffffff\",\n  },\n  submitButton: {\n    backgroundColor: \"gray\",\n    padding: 100,\n  },\n});"]},"metadata":{},"sourceType":"module"}