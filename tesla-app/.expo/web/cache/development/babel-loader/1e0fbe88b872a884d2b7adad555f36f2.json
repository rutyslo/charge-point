{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var TESLA_API = 'https://owner-api.teslamotors.com/';\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullName = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var onChangeNameHandler = function onChangeNameHandler(fullName) {\n    setFullName(fullName);\n  };\n\n  var onChangeEmailHandler = function onChangeEmailHandler(email) {\n    setEmail(email);\n  };\n\n  var onSubmitFormHandler = function onSubmitFormHandler(event) {\n    var response;\n    return _regeneratorRuntime.async(function onSubmitFormHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!fullName.trim() || !email.trim())) {\n              _context.next = 3;\n              break;\n            }\n\n            alert(\"Name or Email is invalid\");\n            return _context.abrupt(\"return\");\n\n          case 3:\n            setIsLoading(true);\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.post(baseUrl + \"/api/users\", {\n              fullName: fullName,\n              email: email\n            }));\n\n          case 7:\n            response = _context.sent;\n\n            if (!(response.status === 201)) {\n              _context.next = 15;\n              break;\n            }\n\n            alert(\" You have created: \" + JSON.stringify(response.data));\n            setIsLoading(false);\n            setFullName('');\n            setEmail('');\n            _context.next = 16;\n            break;\n\n          case 15:\n            throw new Error(\"An error has occurred\");\n\n          case 16:\n            _context.next = 22;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](4);\n            alert(\"An error has occurred\");\n            setIsLoading(false);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 18]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {}), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/rs282j/Documents/Dev/charge-point/tesla-app/App.js"],"names":["StatusBar","React","useState","App","TESLA_API","fullName","setFullName","email","setEmail","isLoading","setIsLoading","onChangeNameHandler","onChangeEmailHandler","onSubmitFormHandler","event","trim","alert","axios","post","baseUrl","response","status","JSON","stringify","data","Error","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,SAAS,GAAG,oCAAlB;;AAEA,kBAAgCF,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAkCN,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACN,QAAD,EAAc;AACxCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAFD;;AAIA,MAAMO,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACL,KAAD,EAAW;AACtCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAIA,MAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACtB,CAACT,QAAQ,CAACU,IAAT,EAAD,IAAoB,CAACR,KAAK,CAACQ,IAAN,EADC;AAAA;AAAA;AAAA;;AAExBC,YAAAA,KAAK,CAAC,0BAAD,CAAL;AAFwB;;AAAA;AAK1BN,YAAAA,YAAY,CAAC,IAAD,CAAZ;AAL0B;AAAA;AAAA,6CAODO,KAAK,CAACC,IAAN,CAAcC,OAAd,iBAAmC;AACxDd,cAAAA,QAAQ,EAARA,QADwD;AAExDE,cAAAA,KAAK,EAALA;AAFwD,aAAnC,CAPC;;AAAA;AAOlBa,YAAAA,QAPkB;;AAAA,kBAWpBA,QAAQ,CAACC,MAAT,KAAoB,GAXA;AAAA;AAAA;AAAA;;AAYtBL,YAAAA,KAAK,yBAAuBM,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAxB,CAAvB,CAAL;AACAd,YAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,YAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,YAAAA,QAAQ,CAAC,EAAD,CAAR;AAfsB;AAAA;;AAAA;AAAA,kBAiBhB,IAAIiB,KAAJ,CAAU,uBAAV,CAjBgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoBxBT,YAAAA,KAAK,CAAC,uBAAD,CAAL;AACAN,YAAAA,YAAY,CAAC,KAAD,CAAZ;;AArBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAwBA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEgB,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,IAAD,KADF,EAEE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MAFF;AAAA,IADF;AAMD;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState} from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nexport default function App() {\n  const TESLA_API = 'https://owner-api.teslamotors.com/'\n\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onChangeNameHandler = (fullName) => {\n    setFullName(fullName);\n  };\n\n  const onChangeEmailHandler = (email) => {\n    setEmail(email);\n  };\n\n  const onSubmitFormHandler = async (event) => {\n    if (!fullName.trim() || !email.trim()) {\n      alert(\"Name or Email is invalid\");\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await axios.post(`${baseUrl}/api/users`, {\n        fullName,\n        email,\n      });\n      if (response.status === 201) {\n        alert(` You have created: ${JSON.stringify(response.data)}`);\n        setIsLoading(false);\n        setFullName('');\n        setEmail('');\n      } else {\n        throw new Error(\"An error has occurred\");\n      }\n    } catch (error) {\n      alert(\"An error has occurred\");\n      setIsLoading(false);\n    }\n  };\n  return (\n    <View style={styles.container}>\n      <Text></Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}